name: CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run build
        run: uv build
  publish_pypi:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python 3.12
        run: uv python install 3.12
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run build
        run: uv build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.10.3
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  publish_docker:
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image for cuda
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containers/Containerfile.cuda
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
